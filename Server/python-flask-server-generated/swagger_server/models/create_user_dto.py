# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CreateUserDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, firebase_id: str=None, name: str=None, email: str=None, phone: str=None, active_role: str=None):  # noqa: E501
        """CreateUserDTO - a model defined in Swagger

        :param firebase_id: The firebase_id of this CreateUserDTO.  # noqa: E501
        :type firebase_id: str
        :param name: The name of this CreateUserDTO.  # noqa: E501
        :type name: str
        :param email: The email of this CreateUserDTO.  # noqa: E501
        :type email: str
        :param phone: The phone of this CreateUserDTO.  # noqa: E501
        :type phone: str
        :param active_role: The active_role of this CreateUserDTO.  # noqa: E501
        :type active_role: str
        """
        self.swagger_types = {
            'firebase_id': str,
            'name': str,
            'email': str,
            'phone': str,
            'active_role': str
        }

        self.attribute_map = {
            'firebase_id': 'firebaseId',
            'name': 'name',
            'email': 'email',
            'phone': 'phone',
            'active_role': 'activeRole'
        }
        self._firebase_id = firebase_id
        self._name = name
        self._email = email
        self._phone = phone
        self._active_role = active_role

    @classmethod
    def from_dict(cls, dikt) -> 'CreateUserDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateUserDTO of this CreateUserDTO.  # noqa: E501
        :rtype: CreateUserDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firebase_id(self) -> str:
        """Gets the firebase_id of this CreateUserDTO.


        :return: The firebase_id of this CreateUserDTO.
        :rtype: str
        """
        return self._firebase_id

    @firebase_id.setter
    def firebase_id(self, firebase_id: str):
        """Sets the firebase_id of this CreateUserDTO.


        :param firebase_id: The firebase_id of this CreateUserDTO.
        :type firebase_id: str
        """

        self._firebase_id = firebase_id

    @property
    def name(self) -> str:
        """Gets the name of this CreateUserDTO.


        :return: The name of this CreateUserDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this CreateUserDTO.


        :param name: The name of this CreateUserDTO.
        :type name: str
        """

        self._name = name

    @property
    def email(self) -> str:
        """Gets the email of this CreateUserDTO.


        :return: The email of this CreateUserDTO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this CreateUserDTO.


        :param email: The email of this CreateUserDTO.
        :type email: str
        """

        self._email = email

    @property
    def phone(self) -> str:
        """Gets the phone of this CreateUserDTO.


        :return: The phone of this CreateUserDTO.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this CreateUserDTO.


        :param phone: The phone of this CreateUserDTO.
        :type phone: str
        """

        self._phone = phone

    @property
    def active_role(self) -> str:
        """Gets the active_role of this CreateUserDTO.


        :return: The active_role of this CreateUserDTO.
        :rtype: str
        """
        return self._active_role

    @active_role.setter
    def active_role(self, active_role: str):
        """Sets the active_role of this CreateUserDTO.


        :param active_role: The active_role of this CreateUserDTO.
        :type active_role: str
        """

        self._active_role = active_role
