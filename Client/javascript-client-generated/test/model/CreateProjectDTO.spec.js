/*
 * Project Seeker API
 * Project Seeker API
 *
 * OpenAPI spec version: 1.0
 * Contact: jorgetargz@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProjectSeekerApi);
  }
}(this, function(expect, ProjectSeekerApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CreateProjectDTO', function() {
      beforeEach(function() {
        instance = new ProjectSeekerApi.CreateProjectDTO();
      });

      it('should create an instance of CreateProjectDTO', function() {
        // TODO: update the code to test CreateProjectDTO
        expect(instance).to.be.a(ProjectSeekerApi.CreateProjectDTO);
      });

      it('should have the property title (base name: "title")', function() {
        // TODO: update the code to test the property title
        expect(instance).to.have.property('title');
        // expect(instance.title).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property skills (base name: "skills")', function() {
        // TODO: update the code to test the property skills
        expect(instance).to.have.property('skills');
        // expect(instance.skills).to.be(expectedValueLiteral);
      });

      it('should have the property minBudget (base name: "minBudget")', function() {
        // TODO: update the code to test the property minBudget
        expect(instance).to.have.property('minBudget');
        // expect(instance.minBudget).to.be(expectedValueLiteral);
      });

      it('should have the property maxBudget (base name: "maxBudget")', function() {
        // TODO: update the code to test the property maxBudget
        expect(instance).to.have.property('maxBudget');
        // expect(instance.maxBudget).to.be(expectedValueLiteral);
      });

      it('should have the property startDate (base name: "startDate")', function() {
        // TODO: update the code to test the property startDate
        expect(instance).to.have.property('startDate');
        // expect(instance.startDate).to.be(expectedValueLiteral);
      });

      it('should have the property deadlineDate (base name: "deadlineDate")', function() {
        // TODO: update the code to test the property deadlineDate
        expect(instance).to.have.property('deadlineDate');
        // expect(instance.deadlineDate).to.be(expectedValueLiteral);
      });

    });
  });

}));
